/*
 * gps.c
 *
 *  Created on: 5 Nov 2017
 *      Author: Kjetil
 */

#include "gps.h"

#include <string.h>
#include <stdlib.h>

#include "stm32l4xx_hal.h"
#include "stm32l4xx_hal_uart.h"

unsigned char buffer[1000];

static unsigned char CMD_MON[8] = {0xB5, 0x62, 0x0A, 0x04, 0x00, 0x00, 0x0E, 0x34};

struct GPS_Init_d InitGPS(UART_HandleTypeDef gpsUART) {
	struct GPS_Init_d gps;
	gps.gpsUART = gpsUART;
	return gps;
}

unsigned char* getVersion(struct GPS_Init_d gps_init_d) {
	UART_HandleTypeDef gpsUART = gps_init_d.gpsUART;
	while (HAL_UART_GetState(&huart1) != HAL_UART_STATE_READY){}
	HAL_StatusTypeDef tmt_status = HAL_UART_Transmit(&gpsUART, CMD_MON, 8, 1000);
	if(tmt_status==HAL_OK) {
		HAL_StatusTypeDef rcv_status = HAL_UART_Receive(&gpsUART, buffer, 1000, 1000);
		if(rcv_status==HAL_OK) {
			return buffer;
		} else if(rcv_status == HAL_TIMEOUT) {
			return "Receive timeout";
		} else if(tmt_status == HAL_ERROR) {
			return "Receive error";
		} else if(tmt_status == HAL_BUSY) {
			return "Receive busy";
		}
	} else if(tmt_status == HAL_TIMEOUT) {
		return "Transmit timeout";
	} else if(tmt_status == HAL_ERROR) {
		return "Transmit error";
	} else if(tmt_status == HAL_BUSY) {
		return "Transmit busy";
	}
}

